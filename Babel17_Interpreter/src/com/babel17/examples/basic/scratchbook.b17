def fib 0 = 0
def fib 1 = 1
def fib n = (concurrent fib (n-1)) + (concurrent fib (n-2))

def even 0 = true
def odd 0 = true
def even n = odd (n-1)
def odd n = even (n-1)

/* collector_close_
   collector_add_ */


/*[].collector_close_*/

val u = "hello world"

def f x = x mod 2 == 0

val m = lazy((1 to 1000).vector ^ 4)


/*#profile (m * (((k,v),acc) => k*v+acc)) 0    */

val u = object def x = 2 end

u.x = begin
   u = nil
   end

val u = {x = 10, y = 20, z = -4}
val u = {x = 9, y = u.y, z = u.z}
#print u
u = object+(u,)
      def x = 9
    end
u.x

((1 to 10) * ((x,y)=>x+y)) 0
